fragment UsersPermissionsPermissionFragment on UsersPermissionsPermission {
    action
    createdAt
    updatedAt
}

fragment UsersPermissionsRoleFragment on UsersPermissionsRole {
    name
    description
    type
    createdAt
    # UsersPermissionsRole has a users field, but exposing it doesn't seem secure, so left it out
    updatedAt
    # this causes an authorization error that doesnt appear to be fixed by enabling roles in CMS
    # permissions {
    #     data {
    #         id
    #         attributes {
    #             ...UsersPermissionsPermissionFragment
    #         }
    #     }
    # }
}

fragment UsersPermissionsUserFragment on UsersPermissionsUser {
    username
    email
    provider
    confirmed
    blocked
    role {
        data {
            id
            attributes {
                ...UsersPermissionsRoleFragment
            }
        }
    }
    createdAt
    updatedAt
}

fragment UsersPermissionsUserEntityFragment on UsersPermissionsUserEntity {
    id
    attributes {
        ...UsersPermissionsUserFragment
    }
}

fragment UsersPermissionsUserEntityResponseFragment on UsersPermissionsUserEntityResponse {
    data {
        ...UsersPermissionsUserEntityFragment
    }
}

query usersPermissionsUser($id: ID) {
    usersPermissionsUser(id: $id) {
        ...UsersPermissionsUserEntityResponseFragment
    }
}

query usersPermissionsUsers(
    $filters: UsersPermissionsUserFiltersInput
    $pagination: PaginationArg = {}
    $sort: [String] = []
) {
    usersPermissionsUsers(filters: $filters, pagination: $pagination, sort: $sort) {
        data {
            ...UsersPermissionsUserEntityFragment
        }
        meta {
            ...ResponseCollectionMetaFragment
        }
    }
}
